/*
select 
rating
	-- count(film_id),
	-- COUNT(film_id)as no_of_films_with_this_rating
from film

	group
    by(rating)
  
select
rental_duration,
rating,
replacement_cost,
count(film_id) as numbers_of_films
from film
group by rental_duration,
rating,
replacement_cost


select
rating,
count(film_id) as no_of_films,
max(length) as highest_length,
min(length) as shortest_length,
avg(length) as avg_length,
avg(rental_duration) as avg_rental_duration
from film
group by rating

-- step 2 
select
replacement_cost,
count(film_id) as no_of_films,
avg(rental_rate) as avg_ren_rate,
min(rental_rate) as min_rate,
max(rental_rate) as max_rate
from film
group by replacement_cost

select
customer_id,
count(rental_id) as total_rental
from rental
group by(customer_id)
having count(rental_id) <=15 

-- uncle jummy (cus_under_15)

select
customer_id,
count(rental_id) as total_rental
from rental
group by(customer_id)
having count(rental_id) <15
order by count(rental_id), customer_id desc

-- order by

select
distinct(title),
length,
rental_rate
from film
order by(length) desc

select distinct
length,
case 
when length < 60 then 'under 1 hr'
when length between 60 and 90 then '1-1.5 hr'
when length > 90 then 'over 1.5 hr'
else 'check logic pls!'
end as length_bucket
from film
order by length desc
-- case statment
select
	first_name,
	last_name,
	case
    when store_id = 1 and active = 1 then 'store 1 active'
    when store_id = 1 and active = 0 then 'store 1 inactive'
    when store_id = 2 and active = 1 then 'store 2 active'
    when store_id = 2 and active = 0 then 'store 2 inactive'
    else 'check the logic'
    end 'store_&_status'
from customer
*/


SELECT 
    store_id,
    SUM(CASE WHEN active = 1 THEN 1 ELSE 0 END) AS active_customers,
    SUM(CASE WHEN active = 0 THEN 1 ELSE 0 END) AS inactive_customers
FROM 
    customer
GROUP BY 
    store_id;
